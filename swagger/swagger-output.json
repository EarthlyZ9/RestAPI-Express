{
  "openapi": "3.0.0",
  "info": {
    "title": "Express Rest API",
    "description": "First step of building a MERN Stack",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Managing users"
    },
    {
      "name": "Place",
      "description": "Managing places"
    }
  ],
  "paths": {
    "/api/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List all users",
        "description": "",
        "operationId": "getUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong, please try again."
          }
        }
      }
    },
    "/api/users/{uid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by Id",
        "description": "",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "user id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Could not find the user for the provided id."
          },
          "500": {
            "description": "Something went wrong, please try again."
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User sign up",
        "description": "",
        "operationId": "signup",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Jhon Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@com"
                    },
                    "token": {
                      "type": "string",
                      "example": "jwt"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Jhon Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@com"
                    },
                    "token": {
                      "type": "string",
                      "example": "jwt"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "User with the email exists already."
          },
          "442": {
            "description": "Custom error message from express-validator."
          },
          "500": {
            "description": "Sign up failed, please try again."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User login",
        "description": "",
        "operationId": "login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Invalid credentials."
          },
          "442": {
            "description": "Custom error message from express-validator."
          },
          "500": {
            "description": "Log in failed, please try again."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/places/": {
      "get": {
        "tags": [
          "Place"
        ],
        "summary": "List all places",
        "description": "",
        "operationId": "getAllPlaces",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Empty data :("
          },
          "500": {
            "description": "Could not fetch data, please try again."
          }
        }
      },
      "post": {
        "tags": [
          "Place"
        ],
        "summary": "Create place",
        "description": "",
        "operationId": "getPlaceByUserId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created place",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Place"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Place"
                }
              }
            }
          },
          "404": {
            "description": "Could not find a user for provided id."
          },
          "500": {
            "description": "Something went wrong, please try again."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Place"
              }
            }
          }
        }
      }
    },
    "/api/places/{pid}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "pid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Place"
        ],
        "summary": "Update place by Id",
        "description": "",
        "operationId": "updatePlaceById",
        "parameters": [
          {
            "name": "pid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update title and description of a place",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "Empire State Building"
                    },
                    "description": {
                      "type": "string",
                      "example": "ny"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "Empire State Building"
                    },
                    "description": {
                      "type": "string",
                      "example": "ny"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Could not find a place for provided id."
          },
          "500": {
            "description": "Something went wrong, please try again."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Place"
        ],
        "summary": "Delete place by Id",
        "description": "",
        "operationId": "deletePlace",
        "parameters": [
          {
            "name": "pid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted."
          },
          "500": {
            "description": "Something went wrong, please try again."
          }
        }
      }
    },
    "/api/places/user/{uid}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "name",
              "email",
              "password",
              "image"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "password": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "image": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "places": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Place": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "name",
              "email",
              "password",
              "image"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "title": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "description": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "image": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "location": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integer"
                          }
                        }
                      },
                      "lng": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "creator": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Place"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
      }
    }
  }
}